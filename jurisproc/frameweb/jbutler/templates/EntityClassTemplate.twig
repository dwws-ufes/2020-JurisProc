package {{ package.Name }};

import java.util.*;
import java.math.*;
import javax.persistence.*;
import javax.validation.constraints.*;
import br.ufes.inf.nemo.jbutler.ejb.persistence.PersistentObjectSupport;

/** TODO: generated by FrameWeb. Should be documented. */
@Entity
public class {{ class.Name }} extends PersistentObjectSupport implements Comparable<{{ class.Name }}> {
	/** Serialization id. */
	private static final long serialVersionUID = 1L;

{# ATTRIBUTES #}
{% for attribute in attributes %}
	/** TODO: generated by FrameWeb. Should be documented. {{ attribute.getDateTimePrecision is defined }} */
	{% if attribute.isIsNull() == false %}@NotNull{% endif %} {% if attribute.getSize() > 0 %}@Size(max = {{ attribute.getSize() }}){% endif %} {% if attribute.getDateTimePrecision is defined %}@Temporal(TemporalType.{{ upper(attribute.getDateTimePrecision()) }}){% endif %}
	{{ attribute.Visibility.Name }} {{ attribute.Type.Name }} {{ attribute.Name }};
{% endfor %}

{# ASSOCIATIONS #}
{% for association in associations %}
	{%- set sourceToTargetCardinality = association.SourceToTargetCardinality -%}
	{%- set targetToSourceCardinality = association.TargetToSourceCardinality -%}
	{%- set sourceTypeName = association.SourceMember.Type.Name -%}
	{%- set targetTypeName = association.TargetMember.Type.Name -%}
	{%- set sourceName = association.SourceMember.Name -%}
	{%- set targetName = association.TargetMember.Name -%}
	{%- set collection = association.Collection | title -%}
	{% if sourceTypeName == class.Name and targetTypeName == class.Name %}
		{% if sourceToTargetCardinality == "OneToMany" or sourceToTargetCardinality == "ManyToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
	    @ManyToOne
	    public {{ sourceTypeName }} {{ sourceName }};
	
		/** TODO: generated by FrameWeb. Should be documented. */
	    @OneToMany(mappedBy="{{ sourceName }}")
	    public {{ collection }}<{{ targetTypeName }}> {{ targetName }};		
		{% elseif sourceToTargetCardinality == "OneToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToOne
		private {{ sourceTypeName }} {{ sourceName }};
		
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToOne(mappedBy="{{ sourceName }}")
		private {{ targetTypeName }} {{ targetName }};
		{% elseif sourceToTargetCardinality == "ManyToMany" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToMany
		private {{ collection }}<{{ sourceTypeName }}> {{ sourceName }};
		
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToMany(mappedBy = "{{ sourceName }}")
		private {{ collection }}<{{ targetTypeName }}> {{ targetName }};
		{% endif %}
	{% elseif sourceTypeName == class.Name %}
		{% if sourceToTargetCardinality == "OneToMany" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToMany(mappedBy="{{ sourceName }}")
		private {{ collection }}<{{ targetTypeName }}> {{ targetName }};
		{% elseif sourceToTargetCardinality == "ManyToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToOne
		private {{ targetTypeName }} {{ targetName }};
		{% elseif sourceToTargetCardinality == "OneToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToOne
		private {{ targetTypeName }} {{ targetName }};
		{% elseif sourceToTargetCardinality == "ManyToMany" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToMany
		private {{ collection }}<{{ targetTypeName }}> {{ targetName }};
		{% endif %}
	{% elseif targetTypeName == class.Name %}
		{% if targetToSourceCardinality == "OneToMany" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToMany(mappedBy="{{ targetName }}")
		private {{ collection }}<{{ sourceTypeName }}> {{ sourceName }};
		{% elseif targetToSourceCardinality == "ManyToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToOne
		private {{ sourceTypeName }} {{ sourceName }};
		{% elseif sourceToTargetCardinality == "OneToOne" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@OneToOne(mappedBy="{{ targetName }}")
		private {{ sourceTypeName }} {{ sourceName }};
		{% elseif sourceToTargetCardinality == "ManyToMany" %}
		/** TODO: generated by FrameWeb. Should be documented. */
		@ManyToMany(mappedBy="{{ targetName }}")
		private {{ collection }}<{{ sourceTypeName }}> {{ sourceName }};
		{% endif %}
	{% endif %}
{% endfor %}

{# ATTRIBUTES GETTERS AND SETTERS #}
{% for attribute in attributes %}
	/** Getter for {{ attribute.Name }}. */
	public {{ attribute.Type.Name }} get{{ attribute.Name | title }}() {
		return {{ attribute.Name }};
	}
	
	/** Setter for {{ attribute.Name }}. */
	public void set{{ attribute.Name | title }}({{ attribute.Type.Name }} {{ attribute.Name }}) {
		this.{{ attribute.Name }} = {{ attribute.Name }};
	}
{% endfor %}

{# ASSOCIATIONS GETTERS AND SETTERS #}
{% for association in associations %}
	{%- set sourceToTargetCardinality = association.SourceToTargetCardinality -%}
	{%- set targetToSourceCardinality = association.TargetToSourceCardinality -%}
	{%- set sourceTypeName = association.SourceMember.Type.Name -%}
	{%- set targetTypeName = association.TargetMember.Type.Name -%}
	{%- set sourceName = association.SourceMember.Name -%}
	{%- set targetName = association.TargetMember.Name -%}
	{%- set collection = association.Collection | title -%}
	{% if sourceTypeName == class.Name and targetTypeName == class.Name %}
		{% if sourceToTargetCardinality == "OneToMany" or sourceToTargetCardinality == "ManyToOne" %}
		/** Getter for {{ sourceName }}. */
	    public {{ sourceTypeName }} get{{ sourceName | title }}() {
			return {{ sourceName }};
		}
		
		/** Setter for {{ sourceName }}. */
		public void set{{ sourceName | title }}({{ sourceTypeName }} {{ sourceName }}) {
			this.{{ sourceName }} = {{ sourceName }};
		}
		
		/** Getter for {{ targetName }}. */
		public {{ collection }}<{{ targetTypeName }}> get{{ targetName | title }}() {
			return {{ targetName }};
		}
		
		/** Setter for {{ targetName }}. */
		public void set{{ targetName | title }}({{ collection }}<{{ targetTypeName }}> {{ targetName }}) {
			this.{{ targetName }} = {{ targetName }};
		}
		{% elseif sourceToTargetCardinality == "OneToOne" %}
		/** Getter for {{ sourceName }}. */
		public {{ sourceTypeName }} get{{ sourceName | title }}() {
			return {{ sourceName }};
		}
		
		/** Setter for {{ sourceName }}. */
		public void set{{ sourceName | title }}({{ sourceTypeName }} {{ sourceName }}) {
			this.{{ sourceName }} = {{ sourceName }};
		}
		
		/** Getter for {{ targetName }}. */
		public {{ targetTypeName }} get{{ targetName | title }}() {
			return {{ targetName }};
		}
		
		/** Setter for {{ targetName }}. */
		public void set{{ targetName | title }}({{ targetTypeName }} {{ targetName }}) {
			this.{{ targetName }} = {{ targetName }};
		}
		{% elseif sourceToTargetCardinality == "ManyToMany" %}
		/** Getter for {{ sourceName }}. */
		public {{ collection }}<{{ sourceTypeName }}> get{{ sourceName | title }}() {
			return {{ sourceName }};
		}
		
		/** Setter for {{ sourceName }}. */
		public void set{{ sourceName | title }}({{ collection }}<{{ sourceTypeName }}> {{ sourceName }}) {
			this.{{ sourceName }} = {{ sourceName }};
		}
		
		/** Getter for {{ targetName }}. */
		public {{ collection }}<{{ targetTypeName }}> get{{ targetName | title }}() {
			return {{ targetName }};
		}
		
		/** Setter for {{ targetName }}. */
		public void set{{ targetName | title }}({{ collection }}<{{ targetTypeName }}> {{ targetName }}) {
			this.{{ targetName }} = {{ targetName }};
		}
		{% endif %}
	{% elseif sourceTypeName == class.Name %}
		{% if sourceToTargetCardinality == "OneToMany" or sourceToTargetCardinality == "ManyToMany" %}
		/** Getter for {{ targetName }}. */
		public {{ collection }}<{{ targetTypeName }}> get{{ targetName | title }}() {
			return {{ targetName }};
		}
		
		/** Setter for {{ targetName }}. */
		public void set{{ targetName | title }}({{ collection }}<{{ targetTypeName }}> {{ targetName }}) {
			this.{{ targetName }} = {{ targetName }};
		}
		{% elseif sourceToTargetCardinality == "ManyToOne" or sourceToTargetCardinality == "OneToOne" %}
		/** Getter for {{ targetName }}. */
		public {{ targetTypeName }} get{{ targetName | title }}() {
			return {{ targetName }};
		}
		
		/** Setter for {{ targetName }}. */
		public void set{{ targetName | title }}({{ targetTypeName }} {{ targetName }}) {
			this.{{ targetName }} = {{ targetName }};
		}
		{% endif %}
	{% elseif targetTypeName == class.Name %}
		{% if targetToSourceCardinality == "OneToMany" or sourceToTargetCardinality == "ManyToMany" %}
		/** Getter for {{ sourceName }}. */
		public {{ collection }}<{{ sourceTypeName }}> get{{ sourceName | title }}() {
			return {{ sourceName }};
		}
		
		/** Setter for {{ sourceName }}. */
		public void set{{ sourceName | title }}({{ collection }}<{{ sourceTypeName }}> {{ sourceName }}) {
			this.{{ sourceName }} = {{ sourceName }};
		}
		{% elseif targetToSourceCardinality == "ManyToOne" or sourceToTargetCardinality == "OneToOne" %}
		/** Getter for {{ sourceName }}. */
		public {{ sourceTypeName }} get{{ sourceName | title }}() {
			return {{ sourceName }};
		}
		
		/** Setter for {{ sourceName }}. */
		public void set{{ sourceName | title }}({{ sourceTypeName }} {{ sourceName }}) {
			this.{{ sourceName }} = {{ sourceName }};
		}
		{% endif %}
	{% endif %}
{% endfor %}

{# METHODS #}
{% for method in methods %}
	/** TODO: generated by FrameWeb. Should be documented. */
	{% if method.isAbstract() %}
	{{ method.Visibility.Name }} abstract {% if method.MethodType is null %}void{% else %}{{ method.MethodType.Name }}{% endif %} {{ method.Name }}({% for parameter in method.OwnedParameters %}{{ parameter.Type.Name }} {{ parameter.Name }}{% if loop.last == false %}, {% endif %}{% endfor %});
	{% else %}
	{{ method.Visibility.Name }} {% if method.MethodType is null %}void{% else %}{{ method.MethodType.Name }}{% endif %} {{ method.Name }}({% for parameter in method.OwnedParameters %}{{ parameter.Type.Name }} {{ parameter.Name }}{% if loop.last == false %}, {% endif %}{% endfor %}) {
		// FIXME: auto-generated method stub
		return{% if method.MethodType is not null %} null{% endif %};
	}
	{% endif %}
{% endfor %}

	/** @see java.lang.Comparable#compareTo(java.lang.Object) */
	@Override
	public int compareTo({{ class.Name }} o) {
		// FIXME: auto-generated method stub		
		return super.compareTo(o);
	}
}
