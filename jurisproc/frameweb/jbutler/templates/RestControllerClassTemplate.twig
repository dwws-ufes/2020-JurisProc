package {{ package.Name }};

import javax.enterprise.inject.*;
import javax.ws.rs.*;

/** TODO: generated by FrameWeb. Should be documented. */
@Path("TYPE_THE_PATH_HERE")
public class {{ class.Name }} {% if generalizations is not empty %}extends {{ ((generalizations[0]).GeneralizationSets[0]).Name }} {% endif %}{

	{% for association in associations %}
	/** TODO: generated by FrameWeb. Should be documented. */
	@Inject
	private {{ association.TargetMember.Type.Name }} {{ association.TargetMember.Type.Name | lower }};
	
	{% endfor %}

	{% for attribute in attributes %}
	/** TODO: generated by FrameWeb. Should be documented. */
	private {{ attribute.Type.Name }} {{ attribute.Name }};

	{% endfor %}

	{% for method in methods %}
	/** TODO: generated by FrameWeb. Should be documented. */
		{%- if method.RequestType == 'GET' %}
	@GET @Produces("text/xml")
		{%- elseif method.RequestType == 'POST_' %}
	@POST @Consumes("text/xml")
		{%- elseif method.RequestType == 'PUT' %}
	@PUT @Consumes("text/xml")
		{%- elseif method.RequestType == 'DELETE' %}
	@DELETE @Consumes("text/xml")
		{%- endif %}
	{{ method.Visibility.Name }} {% if method.MethodType is null %}void{% else %}{{ method.MethodType.Name }}{% endif %} {{ method.Name }}({% for parameter in method.OwnedParameters %}{{ parameter.Type.Name }} {{ parameter.Name }}{% if loop.last == false %}, {% endif %}{% endfor %}) {
		// FIXME: auto-generated method stub
		return{% if method.MethodType is not null %} null{% endif %};
	}

	{% endfor %}
}
